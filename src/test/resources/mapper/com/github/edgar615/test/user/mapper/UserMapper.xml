<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  This class is generated by Jdbc code generator.
  Table : user
  @author Jdbc Code Generator
-->
<mapper namespace="com.github.edgar615.test.user.mapper.UserMapper">
  <sql id="all_column">
		user_id,type,username,head_pic,nickname,fullname,mobile,mobile_area,mobile_bind_time,mail,email_bind_time,state,gender,birthday,age,language,time_zone,region_code,internal,add_time

  </sql>

  <sql id="example_where">
    <where>
      <foreach collection="example.criteria()" item="criterion">
        <choose>
          <when test="criterion.noValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()}
          </when>
          <when test="criterion.singleValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()} #{criterion.likeValue}
          </when>
          <when test="criterion.betweenValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()} #{criterion.value} and #{criterion.secondValue}
          </when>
          <when test="criterion.listValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()}
            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
              #{listItem}
            </foreach>
          </when>
        </choose>
      </foreach>
    </where>
  </sql>

  <sql id="example_fields">
    <choose>
      <when test="example.fields() == null || example.fields().size() == 0">
        <include refid="all_column"/>
      </when>
      <otherwise>
        <foreach item="field" index="index" collection="example.fields()" separator=",">
          ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)}
        </foreach>
      </otherwise>
    </choose>
  </sql>

  <sql id="limit">
    <if test="limit != null">
      limit
      <if test="offset != null">
        #{offset},
      </if>
      #{limit}
    </if>
  </sql>

  <sql id="order_by">
    <if test="example.orderBy() != null and example.orderBy().size() > 0">
      order by ${example.orderSql}
    </if>
  </sql>

  <sql id="update_sql">
    <set>
      
      <if test="persistent.userId != null">
        user_id = #{persistent.userId},
      </if>
      <if test="persistent.type != null">
        type = #{persistent.type},
      </if>
      <if test="persistent.username != null">
        username = #{persistent.username},
      </if>
      <if test="persistent.headPic != null">
        head_pic = #{persistent.headPic},
      </if>
      <if test="persistent.nickname != null">
        nickname = #{persistent.nickname},
      </if>
      <if test="persistent.fullname != null">
        fullname = #{persistent.fullname},
      </if>
      <if test="persistent.mobile != null">
        mobile = #{persistent.mobile},
      </if>
      <if test="persistent.mobileArea != null">
        mobile_area = #{persistent.mobileArea},
      </if>
      <if test="persistent.mobileBindTime != null">
        mobile_bind_time = #{persistent.mobileBindTime},
      </if>
      <if test="persistent.mail != null">
        mail = #{persistent.mail},
      </if>
      <if test="persistent.emailBindTime != null">
        email_bind_time = #{persistent.emailBindTime},
      </if>
      <if test="persistent.state != null">
        state = #{persistent.state},
      </if>
      <if test="persistent.gender != null">
        gender = #{persistent.gender},
      </if>
      <if test="persistent.birthday != null">
        birthday = #{persistent.birthday},
      </if>
      <if test="persistent.age != null">
        age = #{persistent.age},
      </if>
      <if test="persistent.language != null">
        language = #{persistent.language},
      </if>
      <if test="persistent.timeZone != null">
        time_zone = #{persistent.timeZone},
      </if>
      <if test="persistent.regionCode != null">
        region_code = #{persistent.regionCode},
      </if>
      <if test="persistent.internal != null">
        internal = #{persistent.internal},
      </if>
      <if test="persistent.addTime != null">
        add_time = #{persistent.addTime},
      </if>
    </set>
  </sql>

  <sql id="update_sql_with_null">
    <set>
      
      <if test="persistent.userId != null">
        user_id = #{persistent.userId},
      </if>
      <if test="persistent.type != null">
        type = #{persistent.type},
      </if>
      <if test="persistent.username != null">
        username = #{persistent.username},
      </if>
      <if test="persistent.headPic != null">
        head_pic = #{persistent.headPic},
      </if>
      <if test="persistent.nickname != null">
        nickname = #{persistent.nickname},
      </if>
      <if test="persistent.fullname != null">
        fullname = #{persistent.fullname},
      </if>
      <if test="persistent.mobile != null">
        mobile = #{persistent.mobile},
      </if>
      <if test="persistent.mobileArea != null">
        mobile_area = #{persistent.mobileArea},
      </if>
      <if test="persistent.mobileBindTime != null">
        mobile_bind_time = #{persistent.mobileBindTime},
      </if>
      <if test="persistent.mail != null">
        mail = #{persistent.mail},
      </if>
      <if test="persistent.emailBindTime != null">
        email_bind_time = #{persistent.emailBindTime},
      </if>
      <if test="persistent.state != null">
        state = #{persistent.state},
      </if>
      <if test="persistent.gender != null">
        gender = #{persistent.gender},
      </if>
      <if test="persistent.birthday != null">
        birthday = #{persistent.birthday},
      </if>
      <if test="persistent.age != null">
        age = #{persistent.age},
      </if>
      <if test="persistent.language != null">
        language = #{persistent.language},
      </if>
      <if test="persistent.timeZone != null">
        time_zone = #{persistent.timeZone},
      </if>
      <if test="persistent.regionCode != null">
        region_code = #{persistent.regionCode},
      </if>
      <if test="persistent.internal != null">
        internal = #{persistent.internal},
      </if>
      <if test="persistent.addTime != null">
        add_time = #{persistent.addTime},
      </if>
      <if test="nullFields != null">
        <foreach collection="nullFields" item="field" separator="," close=",">
          ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)} = null
        </foreach>
      </if>
      <if test="addOrSub != null">
        <foreach collection="addOrSub.keySet()" item="field" separator=",">
          ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)} = ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)} + ${addOrSub.get(field)}
        </foreach>
      </if>
    </set>
  </sql>

  <resultMap id="UserResultMap" type="com.github.edgar615.test.user.entity.User">
    
      <result column="user_id" property="userId" />
      <result column="type" property="type" />
      <result column="username" property="username" />
      <result column="head_pic" property="headPic" />
      <result column="nickname" property="nickname" />
      <result column="fullname" property="fullname" />
      <result column="mobile" property="mobile" />
      <result column="mobile_area" property="mobileArea" />
      <result column="mobile_bind_time" property="mobileBindTime" />
      <result column="mail" property="mail" />
      <result column="email_bind_time" property="emailBindTime" />
      <result column="state" property="state" />
      <result column="gender" property="gender" />
      <result column="birthday" property="birthday" />
      <result column="age" property="age" />
      <result column="language" property="language" />
      <result column="time_zone" property="timeZone" />
      <result column="region_code" property="regionCode" />
      <result column="internal" property="internal" />
      <result column="add_time" property="addTime" />
  </resultMap>

  <insert id="insert" parameterType="com.github.edgar615.test.user.entity.User">
    insert into
    user(user_id,type,username,head_pic,nickname,fullname,mobile,mobile_area,mobile_bind_time,mail,email_bind_time,state,gender,birthday,age,language,time_zone,region_code,internal,add_time)
    values(#{userId},#{type},#{username},#{headPic},#{nickname},#{fullname},#{mobile},#{mobileArea},#{mobileBindTime},#{mail},#{emailBindTime},#{state},#{gender},#{birthday},#{age},#{language},#{timeZone},#{regionCode},#{internal},#{addTime})
  </insert>

  <insert id="insertAndGeneratedKey" parameterType="com.github.edgar615.test.user.entity.User"
          useGeneratedKeys="true" keyProperty="id" keyColumn="user_id">
    insert into
    user(user_id,type,username,head_pic,nickname,fullname,mobile,mobile_area,mobile_bind_time,mail,email_bind_time,state,gender,birthday,age,language,time_zone,region_code,internal,add_time)
    values(#{userId},#{type},#{username},#{headPic},#{nickname},#{fullname},#{mobile},#{mobileArea},#{mobileBindTime},#{mail},#{emailBindTime},#{state},#{gender},#{birthday},#{age},#{language},#{timeZone},#{regionCode},#{internal},#{addTime})

    <selectKey resultType="long" order="AFTER" keyProperty="id" keyColumn="user_id">
      select LAST_INSERT_ID() as user_id
    </selectKey>
  </insert>

  <delete id="deleteById" parameterType="long">
    delete from user where user_id = #{id}
  </delete>

  <select id="findById" resultMap="UserResultMap" parameterType="long">
    select
      <include refid="all_column" />
    from user
    where  user_id = #{id}
  </select>

  <select id="findCustomFieldById" resultMap="UserResultMap">
    select
     <choose>
       <when test="fields == null || fields.size() == 0">
         <include refid="all_column"/>
       </when>
       <otherwise>
         <foreach item="field" index="index" collection="fields" separator=",">
           ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)}
         </foreach>
       </otherwise>
     </choose>
    from user
    where user_id = #{id}
  </select>

  <select id="findByExample" resultMap="UserResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="example_fields" />
    from user
    <include refid="example_where"/>
    <include refid="order_by"/>
  </select>

  <select id="findByExampleWithLimit" resultMap="UserResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="example_fields" />
    from user
    <include refid="example_where"/>
    <include refid="order_by"/>
    <include refid="limit"/>
  </select>

  <select id="countByExample" resultType="int">
    select count(*) from user
    <include refid="example_where"/>
  </select>

  <delete id="deleteByExample">
    delete from user
    <include refid="example_where"/>
  </delete>

  <update id="updateById">
    update user
    <include refid="update_sql"/>
    where user_id = #{id}
  </update>

  <update id="updateByIdWithNull">
    update user
    <include refid="update_sql_with_null"/>
    where user_id = #{id}
  </update>

  <update id="updateByExample">
    update user
    <include refid="update_sql"/>
    <include refid="example_where"/>
  </update>

  <update id="updateByExampleWithNull">
    update user
    <include refid="update_sql_with_null"/>
    <include refid="example_where"/>
  </update>

  <!-- START Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags. -->
	<!-- END Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.-->


</mapper>
