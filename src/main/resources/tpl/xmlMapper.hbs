<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  This class is generated by Jdbc code generator.
  Table : {{table.name}}
  @author Jdbc Code Generator
-->
<mapper namespace="{{mapperPackage}}.{{table.upperCamelName}}{{mapperSuffix}}">
  <sql id="all_column">
    {{~newLine}}{{~blank}}{{~blank}}
    {{~mapperXmlAllField table.columns~}}
    {{~newLine}}
  </sql>

  <sql id="example_where">
    <where>
      <foreach collection="example.criteria()" item="criterion">
        <choose>
          <when test="criterion.noValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()}
          </when>
          <when test="criterion.singleValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()} #{criterion.likeValue}
          </when>
          <when test="criterion.betweenValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()} #{criterion.value} and #{criterion.secondValue}
          </when>
          <when test="criterion.listValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()}
            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
              #{listItem}
            </foreach>
          </when>
        </choose>
      </foreach>
    </where>
  </sql>

  <sql id="example_fields">
    <choose>
      <when test="example.fields() == null || example.fields().size() == 0">
        <include refid="all_column"/>
      </when>
      <otherwise>
        <foreach item="field" index="index" collection="example.fields()" separator=",">
          ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)}
        </foreach>
      </otherwise>
    </choose>
  </sql>

  <sql id="limit">
    <if test="limit != null">
      limit
      <if test="offset != null">
        #{offset},
      </if>
      #{limit}
    </if>
  </sql>

  <sql id="order_by">
    <if test="example.orderBy() != null and example.orderBy().size() > 0">
      order by ${example.orderSql}
    </if>
  </sql>

  <sql id="update_sql">
    <set>
      {{#table.columns}}{{#if ignore}}{{else}}
      <if test="persistent.{{lowerCamelName}} != null">
        {{name}} = {{~mapperXmlUpdateValue this}},
      </if>{{/if}}{{/table.columns}}
    </set>
  </sql>

  <sql id="update_sql_with_null">
    <set>
      {{#table.columns}}{{#if ignore}}{{else}}
      <if test="persistent.{{lowerCamelName}} != null">
        {{name}} = {{~mapperXmlUpdateValue this}},
      </if>{{/if}}{{/table.columns}}
      <if test="nullFields != null">
        <foreach collection="nullFields" item="field" separator="," close=",">
          ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)} = null
        </foreach>
      </if>
      <if test="addOrSub != null">
        <foreach collection="addOrSub.keySet()" item="field" separator=",">
          ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)} = ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)} + ${addOrSub.get(field)}
        </foreach>
      </if>
    </set>
  </sql>

  <resultMap id="{{table.upperCamelName}}ResultMap" type="{{domainPackage}}.{{table.upperCamelName}}">
    {{#table.columns}}{{#if ignore}}{{else}}
      <result column="{{name}}" property="{{lowerCamelName}}" />{{/if}}{{/table.columns}}
  </resultMap>

  <insert id="insert" parameterType="{{domainPackage}}.{{table.upperCamelName}}">
    insert into
    {{table.name}}({{~mapperXmlAllField table.columns~}})
    values({{~mapperXmlInsertValues table.columns~}})
  </insert>

  <insert id="insertAndGeneratedKey" parameterType="{{domainPackage}}.{{table.upperCamelName}}"
          useGeneratedKeys="true" keyProperty="id" keyColumn="{{table.pk}}">
    insert into
    {{table.name}}({{~mapperXmlAllField table.columns~}})
    values({{~mapperXmlInsertValues table.columns~}})

    <selectKey resultType="{{table.pkType.primitiveName}}" order="AFTER" keyProperty="id" keyColumn="{{table.pk}}">
      select LAST_INSERT_ID() as {{table.pk}}
    </selectKey>
  </insert>

  <delete id="deleteById" parameterType="{{table.pkType.primitiveName}}">
    delete from {{table.name}} where {{table.pk}} = #{id}
  </delete>

  <select id="findById" resultMap="{{table.upperCamelName}}ResultMap" parameterType="{{table.pkType.primitiveName}}">
    select
      <include refid="all_column" />
    from {{table.name}}
    where  {{table.pk}} = #{id}
  </select>

  <select id="findCustomFieldById" resultMap="{{table.upperCamelName}}ResultMap">
    select
     <choose>
       <when test="fields == null || fields.size() == 0">
         <include refid="all_column"/>
       </when>
       <otherwise>
         <foreach item="field" index="index" collection="fields" separator=",">
           ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)}
         </foreach>
       </otherwise>
     </choose>
    from {{table.name}}
    where {{table.pk}} = #{id}
  </select>

  <select id="findByExample" resultMap="{{table.upperCamelName}}ResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="example_fields" />
    from {{table.name}}
    <include refid="example_where"/>
    <include refid="order_by"/>
  </select>

  <select id="findByExampleWithLimit" resultMap="{{table.upperCamelName}}ResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="example_fields" />
    from {{table.name}}
    <include refid="example_where"/>
    <include refid="order_by"/>
    <include refid="limit"/>
  </select>

  <select id="countByExample" resultType="int">
    select count(*) from {{table.name}}
    <include refid="example_where"/>
  </select>

  <delete id="deleteByExample">
    delete from {{table.name}}
    <include refid="example_where"/>
  </delete>

  <update id="updateById">
    update {{table.name}}
    <include refid="update_sql"/>
    where {{table.pk}} = #{id}
  </update>

  <update id="updateByIdWithNull">
    update {{table.name}}
    <include refid="update_sql_with_null"/>
    where {{table.pk}} = #{id}
  </update>

  <update id="updateByExample">
    update {{table.name}}
    <include refid="update_sql"/>
    <include refid="example_where"/>
  </update>

  <update id="updateByExampleWithNull">
    update {{table.name}}
    <include refid="update_sql_with_null"/>
    <include refid="example_where"/>
  </update>

  {{safestr userSource}}
</mapper>
