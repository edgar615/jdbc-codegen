<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csst.microservice.jpush.mapper.UserMapper">
  <sql id="all_column">
    {{~newLine}}{{~blank}}{{~blank}}
    {{~mapperXmlAllField table.columns~}}
    {{~newLine}}
  </sql>

  <resultMap id="{{table.upperCamelName}}ResultMap" type="{{domainPackage}}.{{table.upperCamelName}}">
    {{#table.columns}}{{#if ignore}}{{else}}
      <result column="{{name}}" property="{{lowerCamelName}}" />{{/if}}{{/table.columns}}
  </resultMap>

  <insert id="insert" parameterType="{{domainPackage}}.{{table.upperCamelName}}">
    insert into
    {{table.name}}({{~mapperXmlAllField table.columns~}})
    values({{~mapperXmlInsertValues table.columns~}})
  </insert>

  <insert id="insertAndGenerateKey" parameterType="{{domainPackage}}.{{table.upperCamelName}}"
          useGeneratedKeys="true" keyProperty="id" keyColumn="{{table.pk}}">
    insert into
    {{table.name}}({{~mapperXmlAllField table.columns~}})
    values({{~mapperXmlInsertValues table.columns~}})

    <selectKey resultType="{{table.pkType.primitiveName}}" order="AFTER" keyProperty="id" keyColumn="{{table.pk}}">
      select LAST_INSERT_ID() as {{table.pk}}
    </selectKey>
  </insert>

  <delete id="deleteById" parameterType="{{table.pkType.primitiveName}}">
    delete from {{table.name}} where {{table.pk}} = #{id}
  </delete>

  <update id="updateById" parameterType="{{domainPackage}}.{{table.upperCamelName}}">
    update {{table.name}}
    <set>
      {{#table.columns}}{{#if ignore}}{{else}}
      <if test="{{lowerCamelName}} != null">
        {{name}} = {{~mapperXmlColumnValue this}},
      </if>{{/if}}{{/table.columns}}
    </set>
    where {{table.pk}} = #{id}
  </update>

  <select id="findById" resultMap="{{table.upperCamelName}}ResultMap" parameterType="{{table.pkType.primitiveName}}">
    select
      <include refid="all_column" />
    from {{table.name}}
    where  {{table.pk}} = #{id}
  </select>

  <select id="findCustomFieldById" resultMap="{{table.upperCamelName}}ResultMap" parameterType="{{table.pkType.primitiveName}}">
    select
     <foreach item="item" index="index" collection="fields" separator=",">
            #{item}
      </foreach>
    from {{table.name}}
    where {{table.pk}} = #{id}
  </select>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 18 21:51:02 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 18 21:51:02 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
</mapper>
