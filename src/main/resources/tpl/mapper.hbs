package {{package}};

{{#imports}}import {{this}};
{{/imports}}
/**
* This class is generated by Jdbc code generator.
*
* Table : {{table.name}}
*
* @author Jdbc Code Generator Date {{date}}
*/
@Mapper
@CacheConfig(cacheResolver = "mybatisJdbcCacheResolver")
public interface {{table.upperCamelName}}{{suffix}} extends BaseMapper<{{table.pkType.name}}, {{table.upperCamelName}}> {

  /**
   * 新增数据.
   *
   * @param persistent 持久化对象
   */
  @Override
  @CacheEvict(cacheNames = "{{table.upperCamelName}}JdbcCache", key = "'{{table.upperCamelName}}:' + #p0.id()")
  void insert({{table.upperCamelName}} persistent);

  /**
   * insert一条数据，并返回自增主键
   *
   * @param persistent 持久化对象
   */
  @Override
  @CacheEvict(cacheNames = "{{table.upperCamelName}}JdbcCache", key = "'{{table.upperCamelName}}:' + #result")
  {{table.pkType.name}} insertAndGeneratedKey({{table.upperCamelName}} persistent);

  /**
   * 根据主键删除.
   *
   * @param id 主键
   * @return 删除记录数
   */
  @Override
  @CacheEvict(cacheNames = "{{table.upperCamelName}}JdbcCache", key = "'{{table.upperCamelName}}:' + #p1")
  int deleteById({{table.pkType.name}} id);

  /**
   * 根据条件删除.
   *
   * @param example 查询条件
   * @return 删除记录数
   */
  @Override
  @CacheEvict(cacheNames = "{{table.upperCamelName}}JdbcCache", allEntries = true)
  int deleteByExample(@Param("example") Example example);

  /**
   * 根据主键更新，忽略实体中的null.
   *
   * @param persistent 持久化对象
   * @param id 主键
   * @return 修改记录数
   */
  @Override
  @CacheEvict(cacheNames = "{{table.upperCamelName}}JdbcCache", key = "'{{table.upperCamelName}}:' + #p1")
  int updateById(@Param("persistent") {{table.upperCamelName}} persistent, @Param("id") {{table.pkType.name}} id);

  /**
   * 根据条件更新，忽略实体中的null.
   *
   * @param persistent 持久化对象
   * @param example 查询条件
   * @return 修改记录数
   */
  @Override
  @CacheEvict(cacheNames = "{{table.upperCamelName}}JdbcCache", allEntries = true)
  int updateByExample(@Param("persistent") {{table.upperCamelName}} persistent, @Param("example") Example example);

  /**
   * 根据主键更新，忽略实体中的null
   *
   * @param persistent 持久化对象
   * @param addOrSub 需要做增加或者减去的字段，value为正数表示增加，负数表示减少
   * @param nullFields 需要设为null的字段
   * @param id 主键ID
   * @return 修改记录数
   */
  @Override
  @CacheEvict(cacheNames = "{{table.upperCamelName}}JdbcCache", key = "'{{table.upperCamelName}}:' + #p3")
  int updateByIdWithNull(@Param("persistent") {{table.upperCamelName}} persistent, @Param("addOrSub") Map<String, Number> addOrSub,
      @Param("nullFields") List<String> nullFields,
      @Param("id") {{table.pkType.name}} id);

  /**
   * 根据条件更新，忽略实体中的null
   *
   * @param persistent 持久化对象
   * @param addOrSub 需要做增加或者减去的字段，value为正数表示增加，负数表示减少
   * @param nullFields 需要设为null的字段
   * @param example 查询条件
   * @return 修改记录数
   */
  @Override
  @CacheEvict(cacheNames = "{{table.upperCamelName}}JdbcCache", allEntries = true)
  int updateByExampleWithNull(@Param("persistent") {{table.upperCamelName}} persistent, @Param("addOrSub") Map<String, Number> addOrSub,
      @Param("nullFields") List<String> nullFields, @Param("example") Example example);


  /**
   * 根据主键查找.
   *
   * @param id 主键
   * @return 持久化对象，如果未找到任何数据，返回null
   */
  @Override
  @Cacheable(cacheNames = "{{table.upperCamelName}}JdbcCache", key = "'{{table.upperCamelName}}:' + #p1")
  {{table.upperCamelName}} findById({{table.pkType.name}} id);

   {{safestr userSource}}
}
