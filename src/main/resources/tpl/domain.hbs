package {{package}};

{{#imports}}import {{this}};
{{/imports}}
/**
* This class is generated by Jdbc code generator.
*
* Table : {{table.name}}
* remarks: {{table.remarks}}
*
* @author Jdbc Code Generator Date {{date}}
*/
public class {{table.upperCamelName}} implements Persistent<{{table.pkType.name}}> {

    private static final long serialVersionUID = 1L;
    {{#table.columns}}{{#if ignore}}{{else if annotations}}
    /**
    * Column : {{name}}
    * remarks: {{remarks}}
    * default: {{defaultValue}}
    * isNullable: {{nullable}}
    * isAutoInc: {{autoInc}}
    * isPrimary: {{primary}}
    * type: {{type}}
    * size: {{size}}
    */
    {{#annotationsClass}}{{this}}
    {{/annotationsClass}}
    {{~columnField this~}}
    {{else}}
    /**
    * Column : {{name}}
    * remarks: {{remarks}}
    * default: {{defaultValue}}
    * isNullable: {{nullable}}
    * isAutoInc: {{autoInc}}
    * isPrimary: {{primary}}
    * type: {{type}}
    * size: {{size}}
    */
    private {{parameterType.name}} {{lowerCamelName}};
    {{/if}}{{/table.columns}}{{#table.columns}}{{#if ignore}}{{else}}
    public {{parameterType.name}} get{{upperCamelName}}() {
        return {{lowerCamelName}};
    }

    public void set{{upperCamelName}}({{parameterType.name}} {{lowerCamelName}}) {
        this.{{lowerCamelName}} = {{lowerCamelName}};
    }
    {{/if}}{{/table.columns}}
    @Override
    public String toString() {
        return MoreObjects.toStringHelper("{{table.upperCamelName}}"){{#table.columns}}{{#if ignore}}{{else}}
            .add("{{lowerCamelName}}",  {{lowerCamelName}}){{/if}}{{/table.columns}}
           .toString();
    }

    @Override
    public List<String> fields() {
      return Lists.newArrayList({{safestr table.fields}});
    }
    {{#if table.containsVirtual}}
    public List<String> virtualFields() {
        return Lists.newArrayList({{safestr table.virtualFields}});
    }
    {{/if}}
    @Override
    public String primaryField() {
        return "{{lowUnderscoreToLowCamel table.pk}}";
    }

    @Override
    public {{table.pkType.name}} id () {
    return {{lowUnderscoreToLowCamel table.pk}};
    }

    @Override
    public void setId({{table.pkType.name}} id) {
        this.{{lowUnderscoreToLowCamel table.pk}} = id;
    }

    @Override
    public void setGeneratedKey(Number key) {
    {{#eq table.pkType.name "Integer"}}
        this.{{lowUnderscoreToLowCamel table.pk}} = key.intValue();
    {{else eq table.pkType.name "Long"}}
        this.{{lowUnderscoreToLowCamel table.pk}} = key.longValue();
    {{else}}
        throw new UnsupportedOperationException();
    {{/eq}}
    }

    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> map = Maps.newHashMap();{{#table.columns}}{{#if ignore}}{{else}}
        map.put("{{lowerCamelName}}",  {{lowerCamelName}});{{/if}}{{/table.columns}}
        return map;
    }

    @Override
    public void fromMap(Map<String, Object> map) {
        if (map == null) {
            return;
        }
        {{#table.columns}}{{#if ignore}}{{else}}if (map.get("{{lowerCamelName}}") instanceof {{parameterType lowerCamelName table.columns}}) {
            this.{{lowerCamelName}} = ({{parameterType lowerCamelName table.columns}}) map.get("{{lowerCamelName}}");
        }
        {{/if}}{{/table.columns}}
    }

   {{safestr userSource}}
}